Index: checked_button.py
===================================================================
--- checked_button.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
+++ checked_button.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
@@ -1,23 +0,0 @@
-from tkinter import *
-
-ws = Tk()
-ws.title('PythonGuides')
-ws.geometry('200x80')
-
-def isChecked():
-    if cb.get() == 1:
-        btn['state'] = NORMAL
-        btn.configure(text='Awake!')
-    elif cb.get() == 0:
-        btn['state'] = DISABLED
-        btn.configure(text='Sleeping!')
-    else:
-        messagebox.showerror('PythonGuides', 'Something went wrong!')
-
-cb = IntVar()
-
-Checkbutton(ws, text="accept T&C", variable=cb, onvalue=1, offvalue=0, command=isChecked).pack()
-btn = Button(ws, text='Sleeping!', state=DISABLED, padx=20, pady=5)
-btn.pack()
-
-ws.mainloop()
\ No newline at end of file
Index: gui_Example.py
===================================================================
--- gui_Example.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
+++ gui_Example.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
@@ -1,53 +0,0 @@
-import tkinter as tk
-from tkinter import ttk
-
-
-def comCallback(event):
-    # get will get its value - note that this is always a string
-    selIndex = event.widget.current()
-    print("Index selected is: " + str(selIndex))
-
-
-# Main window
-root = tk.Tk()
-root.title("TKinter Example")
-root.geometry('800x400')
-
-# Tab control
-tabControl = ttk.Notebook(root)
-tab1 = ttk.Frame(tabControl)  # tab1 and tab2 are tab window names
-tab2 = ttk.Frame(tabControl)
-tabControl.add(tab1, text='Blue')  # Blue and Red are tab titles
-tabControl.add(tab2, text='Red')
-tabControl.pack(expand=1, fill="both")
-
-# Label
-lab1 = ttk.Label(tab1)
-lab1.grid(column=1, row=0)
-lab1['text'] = "This is a label"
-
-# Combobox
-com1 = ttk.Combobox(tab1, width=20, state="readonly")
-com1.grid(column=1, row=2)
-myList = ['cat', 'dog', 'fish']
-com1['values'] = myList
-com1.current(0)
-com1.bind("<<ComboboxSelected>>", comCallback)
-
-# Treeview
-tree1 = ttk.Treeview(tab2, columns=('Animals', 'Names'), show='headings')
-tree1.heading('Animals', text='The Animals')
-tree1.heading('Names', text='Their Names')
-tree1.grid(column=1, row=1)
-
-for i in tree1.get_children():  # Remove any old values in tree list
-    tree1.delete(i)
-
-for row in myList:
-    tree1.insert("", "end", values=[row, "Name Unknown"])
-
-root.mainloop()
-
-
-
-
Index: henry1.py
===================================================================
--- henry1.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
+++ henry1.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
@@ -1,171 +0,0 @@
-from HenryDOA import HenryDOA
-import tkinter as tk
-from tkinter import ttk
-
-class GUI(object):
-    """This class launches the main GUI. There are three folders/tabs. Those point to the different
-    searches."""
-    def __init__(self):
-        self.root = tk.Tk()
-        self.root.title("Henry's Bookstore")
-        self.tabcontrol = ttk.Notebook(self.root)
-        self.tabcontrol.pack(pady=10, expand=True)
-
-        # Setting up Folders
-        self.folder_1 = HenrySBA(self.tabcontrol)
-        self.folder_2 = HenrySBP(self.tabcontrol)
-        # self.folder_3()
-        self.root.mainloop()
-
-
-class HenrySBA(object):
-    def __init__(self, tab):
-        self.tabcontrol = tab
-        # self.folder_1()
-        """Search by Author Folder"""
-        self.frame1 = ttk.Frame(self.tabcontrol, width=400, height=280)
-        self.frame1.pack(fill='both', expand=True)
-        self.tabcontrol.add(self.frame1, text='Search by Author')
-
-        # Author Lastname search
-        self.label1 = ttk.Label(self.frame1)
-        self.label1.grid(column=0, row=1, pady=2, padx=0)
-        self.label1['text'] = 'Author Last Name:'
-
-        # Author combo box
-        self.combo1 = ttk.Combobox(self.frame1, width=20, state='readonly')
-        self.combo1.grid(column=1, row=1, pady=2, padx=0)
-        self.combo1['values'] = HenryDOA().getauthors()
-        # self.combo1.current(0)
-
-        # TODO code right below gets past the first loop
-        # self.author_select = print(HenrySBA().getauthors()[0])
-        self.author_select = self.combo1.bind("<<ComboboxSelected>>", self.CallBack)
-
-        # Book search
-        self.label2 = ttk.Label(self.frame1, width=20, state='readonly')
-        self.label2.grid(column=0, row=2, pady=2, padx=0)
-        self.label2['text'] = 'Book Name:'
-
-        # Book combobox
-        self.combo2 = ttk.Combobox(self.frame1, width=20, state='readonly')
-        self.combo2.grid(column=1, row=2)
-
-        # Book price
-        self.label3 = ttk.Label(self.frame1, width=20, state='readonly')
-        self.label3.grid(column=0, row=3, pady=2, padx=0)
-        self.label3['text'] = 'Book Price:'
-
-        # Create the Tree Here
-        self.tree1 = ttk.Treeview(self.frame1, columns=('BRANCH_NAME','BOOKS_ON_HAND'), show='headings')
-        self.tree1.heading('BRANCH_NAME', text='Branch Name')
-        self.tree1.heading('BOOKS_ON_HAND', text='Book on Hand')
-        self.tree1.grid(columns=4, rows=3, pady=5, padx=5)
-        return
-
-    def CallBack(self,event):
-        """This is running of the Author Search """
-        self.selIndex = HenryDOA().getauthors()[int(event.widget.current())]
-        self.booklist = HenryDOA().getbooks(self.selIndex)
-        self.combo2['values'] = self.booklist
-        self.book_select = self.combo2.bind("<<ComboboxSelected>>", self.CallBack2)
-        self.author_select = HenryDOA().getauthors()[int(event.widget.current())]
-        # self.combo2.current(0)
-
-
-    def CallBack2(self,event):
-        """Making the tree for when book is selected"""
-        self.selIndex2 = event.widget.current()
-        self.book_select = self.booklist[self.selIndex2]
-        print(self.author_select)
-
-        for i in self.tree1.get_children():
-            self.tree1.delete(i)
-
-        for row in HenryDOA().getbranch(self.author_select, self.book_select):
-            self.tree1.insert("","end", values=[row[0], row[1]])
-            self.bookprice = row[2]
-
-        self.label4 = ttk.Label(self.frame1, width=20, state='readonly')
-        self.label4.grid(column=1, row=3, pady=2, padx=0)
-        self.label4['text'] = '$ '+ str(self.bookprice)
-
-        self.labelprice = ttk.Label()
-
-
-class HenrySBP(object):
-    def __init__(self, tab):
-        self.tabcontrol = tab
-        self.frame2 = ttk.Frame(self.tabcontrol, width=400, height=280)
-        self.frame2.pack(fill='both', expand=True)
-        self.tabcontrol.add(self.frame2, text='Search by Publisher')
-
-        # Author Lastname search
-        self.label1 = ttk.Label(self.frame2)
-        self.label1.grid(column=0, row=1)
-        self.label1['text'] = 'Publisher Name:'
-
-        # # Author combo box
-        self.combo1 = ttk.Combobox(self.frame2, width=20, state='readonly')
-        self.combo1.grid(column=1, row=1, pady=2, padx=0)
-        print(HenryDOA().getpublishers())
-        self.combo1['values'] = HenryDOA().getpublishers()
-        self.combo1.current(0)
-        #
-        self.author_select = self.combo1.bind("<<ComboboxSelected>>", self.CallBack)
-
-        # # Book search
-        self.label2 = ttk.Label(self.frame2, width=20, state='readonly')
-        self.label2.grid(column=0, row=2, pady=2, padx=0)
-        self.label2['text'] = 'Book Title:'
-
-        # # Book combobox
-        self.combo2 = ttk.Combobox(self.frame2, width=20, state='readonly')
-        self.combo2.grid(column=1, row=2)
-
-        # # Book price
-        self.label3 = ttk.Label(self.frame2, width=20, state='readonly')
-        self.label3.grid(column=0, row=3, pady=2, padx=0)
-        self.label3['text'] = 'Book Price:'
-
-        # # Create the Tree Here
-        self.tree1 = ttk.Treeview(self.frame2, columns=('BRANCH_NAME','BOOKS_ON_HAND'), show='headings')
-        self.tree1.heading('BRANCH_NAME', text='Branch Name')
-        self.tree1.heading('BOOKS_ON_HAND', text='Book on Hand')
-        self.tree1.grid(columns=4, rows=3, pady=5, padx=5)
-        return
-
-    def CallBack(self,event):
-        """This is running of the Author Search """
-        self.selIndex = HenryDOA().getpublishers()[int(event.widget.current())]
-        self.booklist = HenryDOA().getpublisher_book_list(self.selIndex)
-        self.combo2['values'] = self.booklist
-        self.book_select = self.combo2.bind("<<ComboboxSelected>>", self.CallBack2)
-        self.publisher_select = HenryDOA().getpublishers()[int(event.widget.current())]
-        # self.combo2.current(0)
-
-
-    def CallBack2(self,event):
-        """Making the tree for when book is selected"""
-        self.selIndex2 = event.widget.current()
-        self.book_select = self.booklist[self.selIndex2]
-        print(self.book_select)
-
-        for i in self.tree1.get_children():
-            self.tree1.delete(i)
-
-        for row in HenryDOA().getbranch_by_pub(self.publisher_select, self.book_select):
-            self.tree1.insert("","end", values=[row[0], row[1]])
-            self.bookprice = row[2]
-
-        self.label4 = ttk.Label(self.frame2, width=20, state='readonly')
-        self.label4.grid(column=1, row=3, pady=2, padx=0)
-        self.label4['text'] = '$ '+ str(self.bookprice)
-
-        self.labelprice = ttk.Label()
-
-
-if __name__ == '__main__':
-    mainfolder = GUI()
-
-# print(HenryDOA().getauthors())
\ No newline at end of file
Index: henry_2.py
===================================================================
--- henry_2.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
+++ henry_2.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
@@ -1,198 +0,0 @@
-import tkinter as tk
-from tkinter import ttk
-import mysql.connector
-
-global bookstore_db
-
-bookstore_db = mysql.connector.connect(user='root',
-                                            password='64d^)4H6zsQ}',
-                                            host='127.0.0.1',
-                                            database='henry_books')
-
-class Folders(object):
-    def __init__(self):
-        self.root = tk.Tk()
-        self.initial_folders()
-        self.root.mainloop()
-
-    def initial_folders(self):
-        self.root.title("Henry's Bookstore")
-        # self.root.geometry('400x400')
-        self.tabcontrol = ttk.Notebook(self.root)
-        self.tabcontrol.pack(pady=10, expand=True)
-
-        # create frames
-        self.frame1 = ttk.Frame(self.tabcontrol, width=400, height=280)
-        self.frame2 = ttk.Frame(self.tabcontrol, width=400, height=280)
-        self.frame3 = ttk.Frame(self.tabcontrol, width=400, height=280)
-
-        self.frame1.pack(fill='both', expand=True)
-        self.frame2.pack(fill='both', expand=True)
-        self.frame3.pack(fill='both', expand=True)
-
-        # add frames to notebook
-        self.tabcontrol.add(self.frame1, text='Search by Author')
-        self.tabcontrol.add(self.frame2, text='Search by Publisher')
-        self.tabcontrol.add(self.frame3, text='Search by Category')
-
-        # ComboBox and Tree views
-        self.combobox1()
-
-        # self.treeview1()
-
-
-    def combobox1(self):
-        # Labels
-        self.label1 = ttk.Label(self.frame1)
-        self.label1.grid(column=1, row=1)
-        self.label1['text'] = "Author Last Name: "
-
-        #Grabing List of authors
-        self.authors_list = HenrySBA()
-
-        # Setting up drop down
-        self.com1 = ttk.Combobox(self.frame1, width=20, state='readonly')
-        self.com1.grid(column=2,row=1)
-        self.com1['values'] = self.authors_list.getauthors()
-        self.com1.current(0)
-        self.com1.bind("<<ComboboxSelected>>", self.comCallBack)
-
-
-    def combobox2(self,author):
-        # Labels
-        self.label2 = ttk.Label(self.frame1)
-        self.label2.grid(column=1, row=2)
-        self.label2['text'] = "Book Name: "
-
-        self.com2 = ttk.Combobox(self.frame1, width=20, state='readonly')
-        self.com2.grid(column=2, row=2)
-        # TODO fix the submit button call function
-        # print(self.comCallBack)
-        # self.my_button1 = tk.Button(self.frame1, text="Submit", command="Something")
-        # self.my_button1.grid(column=1, row=4)
-
-        self.book_list = HenrySBA()
-        self.com2['values'] = self.book_list.getbooks(author)
-        self.com2.current(0)
-        self.com2.bind("<<ComboboxSelected>>", self.comCallBack2)
-
-
-    def treeview1(self,author):
-        self.tree1 = ttk.Treeview(self.frame1, columns=('TITLE','NUMBOOKS'), show="headings")
-        # TODO throw a for loop in here to get all the column names
-        self.tree1.heading('TITLE', text='TITLE')
-        self.tree1.heading('NUMBOOKS', text="NUMBOOKS")
-        self.tree1.grid(column=3, row=5, pady=5, padx=5)
-
-        for i in self.tree1.get_children():
-            self.tree1.delete(i)
-
-        for row in self.authors_list.getbooks(author):
-            self.tree1.insert("","end", values=[row])
-
-
-    def comCallBack(self,event):
-        """This holds the index of the search menu. Will want to make it fire upon submitting"""
-        self.author_list = self.authors_list.getauthors()
-        self.selIndex = int(event.widget.current())
-        self.author = self.authors_list.getauthor(self.selIndex)
-        self.combobox2(self.author)
-        return self.author
-
-    def comCallBack2(self,event):
-        self.book_list = self.book_list.getbooks(self.author)
-        self.selIndex2 = event.widget.current()
-        print(self.selIndex2)
-        # self.book = self.authors_list.getbooks(self.selIndex2)
-        self.treeview1(self.author)
-
-
-class HenrySBA():
-    """Search By Author"""
-    def __init__(self):
-        self.mydb = bookstore_db
-        self.mycur = self.mydb.cursor()
-        self.getauthors()
-
-# TODO figure out this string function
-    def __str__(self):
-        """Will need a string"""
-        return str(self.authorlist)
-
-    def getauthors(self):
-        self.sql = "SELECT AUTHOR_NUM, AUTHOR_LAST, AUTHOR_FIRST FROM henry_author"
-        self.mycur.execute(self.sql)
-        self.authorlist = []
-        for row in self.mycur:
-            self.authorlist.append(row[1])
-        self.authorlist = sorted(self.authorlist)  # Sorting the list alphabetically
-        return self.authorlist
-
-    def getauthor(self, index):
-        return self.authorlist[index]
-
-    def getbooks(self, author):
-        self.author = author
-        # self.sql2 = 'SELECT * FROM henry_book'
-        self.sql2 = 'SELECT henry_book.TITLE, count(henry_inventory.BOOK_CODE) as NUMBOOKS ' \
-                    'FROM henry_books.henry_author ' \
-                    'INNER JOIN henry_books.henry_wrote ' \
-                    'ON henry_wrote.AUTHOR_NUM = henry_author.AUTHOR_NUM ' \
-                    'INNER JOIN henry_book ' \
-                    'ON henry_book.BOOK_CODE = henry_wrote.BOOK_CODE ' \
-                    'INNER JOIN henry_inventory ' \
-                    'ON henry_inventory.BOOK_CODE = henry_book.BOOK_CODE ' \
-                    'WHERE AUTHOR_LAST = ' \
-                    '"' + self.author + '"' \
-                    + 'GROUP BY henry_inventory.BOOK_CODE'
-
-        self.mycur.execute(self.sql2)
-        self.booklist = []
-        self.book_count = []
-
-        for row in self.mycur:
-            self.booklist.append(row[0])
-            self.book_count.append(row[1])
-
-        # print(self.booklist)
-        return self.booklist
-
-    def getbook(self, index):
-        return self.booklist[index]
-
-
-class HenrySBC():
-    """Search By Category. In Book Type"""
-    def __init__(self):
-        self.mydb = bookstore_db
-        self.mycur = self.mydb.cursor()
-        self.getcategory()
-
-    def getcategory(self):
-        sql = "SELECT * FROM henry_book"
-        self.mycur.execute(sql)
-        Bookcat = []
-        for row in self.mycur:
-            Bookcat.append(row[1])
-        # print(Bookcat)
-        return Bookcat
-
-
-class HenrySBP():
-    """Search By Publisher"""
-    def __init__(self):
-        self.mydb = bookstore_db
-        self.mycur = self.mydb.cursor()
-        self.getpublisher()
-
-    def getpublisher(self):
-        sql = "SELECT * FROM henry_publisher"
-        self.mycur.execute(sql)
-        Booklist = []
-        for row in self.mycur:
-            Booklist.append([row[0], row[1], row[2]])
-        print(Booklist)
-        return Booklist
-
-if __name__ == '__main__':
-    main_window = Folders()
\ No newline at end of file
Index: henry_3.py
===================================================================
--- henry_3.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
+++ henry_3.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
@@ -1,181 +0,0 @@
-import tkinter as tk
-from tkinter import ttk
-import mysql.connector
-
-global bookstore_db
-
-bookstore_db = mysql.connector.connect(user='root',
-                                            password='64d^)4H6zsQ}',
-                                            host='127.0.0.1',
-                                            database='henry_books')
-
-class Folders(object):
-    def __init__(self):
-        self.root = tk.Tk()
-        self.author_select = ""
-        self.book_select = ""
-
-        self.tabcontrol = ttk.Notebook(self.root)
-        self.tabcontrol.pack(pady=10, expand=True)
-        # self.root.geometry('400x400')
-
-        # Setting up Folders
-        self.folder_1()
-        self.folder_2()
-        self.folder_3()
-        self.root.title("Henry's Bookstore")
-
-        self.root.mainloop()
-
-    def folder_1(self):
-        """Search by Author Folder"""
-        self.frame1 = ttk.Frame(self.tabcontrol, width=400, height=280)
-        self.frame1.pack(fill='both', expand=True)
-        self.tabcontrol.add(self.frame1, text='Search by Author')
-
-        # Author Lastname search
-        self.label1 = ttk.Label(self.frame1)
-        self.label1.grid(column=0, row=1)
-        # self.label1.place(anchor='e')
-        self.label1['text'] = 'Author Last Name:'
-
-        # Author combo box
-        self.combo1 = ttk.Combobox(self.frame1, width=20, state='readonly')
-        self.combo1.grid(column=1, row=1, pady=2, padx=0)
-        self.combo1['values'] = HenrySBA().getauthors()
-        # self.combo1.current(0)
-
-        # TODO code right below gets past the first loop
-        # self.author_select = print(HenrySBA().getauthors()[0])
-        self.author_select = self.combo1.bind("<<ComboboxSelected>>", self.CallBack)
-
-        # Book search
-        self.label2 = ttk.Label(self.frame1, width=20, state='readonly')
-        self.label2.grid(column=0, row=2, pady=2, padx=0)
-        self.label2['text'] = '     Book Name:'
-
-        # Book combobox
-        self.combo2 = ttk.Combobox(self.frame1, width=20, state='readonly')
-        self.combo2.grid(column=1, row=2)
-
-        # Book price
-        self.label3 = ttk.Label(self.frame1, width=20, state='readonly')
-        self.label3.grid(column=0, row=3, pady=2, padx=0)
-        self.label3['text'] = 'Book Price:'
-
-
-        # Create the Tree Here
-        self.tree1 = ttk.Treeview(self.frame1, columns=('BRANCH_NAME','BOOKS_ON_HAND'), show='headings')
-        self.tree1.heading('BRANCH_NAME', text='Branch Name')
-        self.tree1.heading('BOOKS_ON_HAND', text='Book on Hand')
-        self.tree1.grid(columns=4, rows=3, pady=5, padx=5)
-        return
-
-    def CallBack(self,event):
-        """This is running of the Author Search """
-        self.selIndex = HenrySBA().getauthors()[int(event.widget.current())]
-        self.booklist = HenrySBA().getbooks(self.selIndex)
-        self.combo2['values'] = self.booklist
-        self.book_select = self.combo2.bind("<<ComboboxSelected>>", self.CallBack2)
-        self.author_select = HenrySBA().getauthors()[int(event.widget.current())]
-        # self.combo2.current(0)
-
-
-    def CallBack2(self,event):
-        """Making the tree for when book is selected"""
-        self.selIndex2 = event.widget.current()
-        self.book_select = self.booklist[self.selIndex2]
-        print(self.author_select)
-
-        for i in self.tree1.get_children():
-            self.tree1.delete(i)
-
-        for row in HenrySBA().getbranch(self.author_select, self.book_select):
-            self.tree1.insert("","end", values=[row[0], row[1]])
-            self.bookprice = row[2]
-
-        self.label4 = ttk.Label(self.frame1, width=20, state='readonly')
-        self.label4.grid(column=1, row=3, pady=2, padx=0)
-        self.label4['text'] = '$ '+ str(self.bookprice)
-
-        self.labelprice = ttk.Label()
-
-    def folder_2(self):
-        """"Search by Publisher"""
-        self.frame2 = ttk.Frame(self.tabcontrol, width=400, height=280)
-        self.frame2.pack(fill='both', expand=True)
-        self.tabcontrol.add(self.frame2, text='Search by Publisher')
-        return
-
-
-    def folder_3(self):
-        """Search by Category"""
-        self.frame3 = ttk.Frame(self.tabcontrol, width=400, height=280)
-        self.frame3.pack(fill='both', expand=True)
-        self.tabcontrol.add(self.frame3, text='Search by Category')
-        return
-
-
-class HenrySBA():
-    def __init__(self):
-        self.mydb = bookstore_db
-        self.mycur = self.mydb.cursor()
-        self.getauthors()
-
-    def getauthors(self):
-        self.sql = 'SELECT AUTHOR_NUM, AUTHOR_LAST, AUTHOR_FIRST FROM henry_author'
-        self.mycur.execute(self.sql)
-        self.authorlist = []
-        for row in self.mycur:
-            self.authorlist.append(row[1])
-        self.authorlist = sorted(self.authorlist)  # Sorting the list alphabetically
-        return self.authorlist
-
-    def getbooks(self, author):
-        self.author = author
-        # self.sql2 = "SELECT * FROM henry_book"
-        self.sql2 = 'SELECT TITLE, AUTHOR_FIRST, AUTHOR_LAST ' \
-                    'FROM henry_book ' \
-                    'JOIN henry_wrote ' \
-                    'ON henry_wrote.BOOK_CODE = henry_book.BOOK_CODE ' \
-                    'JOIN henry_author ' \
-                    'ON henry_author.AUTHOR_NUM = henry_wrote.AUTHOR_NUM ' \
-                    'WHERE henry_author.AUTHOR_LAST = ' + \
-                    '"' + self.author + '"'
-
-        self.mycur.execute(self.sql2)
-        self.booklist = []
-
-        for row in self.mycur:
-            self.booklist.append(row[0])
-
-        return self.booklist
-
-    def getbranch(self, author, book):
-        self.author = author
-        self.book = book
-        self.sql3 = 'SELECT henry_branch.BRANCH_NAME, henry_inventory.ON_HAND, henry_book.price ' \
-                    'FROM henry_book ' \
-                    'JOIN henry_inventory ON henry_book.BOOK_CODE = henry_inventory.BOOK_CODE ' \
-                    'JOIN henry_wrote ON henry_wrote.BOOK_CODE = henry_book.BOOK_CODE ' \
-                    'JOIN henry_author ON henry_author.AUTHOR_NUM = henry_wrote.AUTHOR_NUM ' \
-                    'JOIN henry_branch ON henry_branch.BRANCH_NUM = henry_inventory.BRANCH_NUM ' \
-                    'WHERE henry_author.AUTHOR_LAST = ' + '"' + self.author + '"'\
-                    'AND henry_book.TITLE = ' + '"' + self.book + '"'
-
-        self.mycur.execute(self.sql3)
-
-        self.branch_books = []
-        for row in self.mycur:
-            self.branch_books.append([row[0], row[1], row[2]])
-
-        return self.branch_books
-
-class Henry_DAO():
-    """Access to the database"""
-
-if __name__ == '__main__':
-    mainfolder = Folders()
-
-
-#Test
\ No newline at end of file
Index: pactice_files.py
===================================================================
--- pactice_files.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
+++ pactice_files.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
@@ -1,29 +0,0 @@
-import tkinter as tk
-from tkinter import ttk
-
-# root window
-root = tk.Tk()
-root.geometry('400x300')
-root.title('Notebook Demo')
-
-# create a notebook
-notebook = ttk.Notebook(root)
-notebook.pack(pady=10, expand=True)
-
-# create frames
-frame1 = ttk.Frame(notebook, width=400, height=280)
-frame2 = ttk.Frame(notebook, width=400, height=280)
-frame3 = ttk.Frame(notebook, width=400, height=280)
-
-frame1.pack(fill='both', expand=True)
-frame2.pack(fill='both', expand=True)
-frame3.pack(fill='both', expand=True)
-
-# add frames to notebook
-
-notebook.add(frame1, text='Search by Author')
-notebook.add(frame2, text='Search by Publisher')
-notebook.add(frame3, text='Search by Category')
-
-
-root.mainloop()
\ No newline at end of file
Index: testing_Pulls.py
===================================================================
--- testing_Pulls.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
+++ testing_Pulls.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
@@ -1,196 +0,0 @@
-import tkinter as tk
-from tkinter import ttk
-import mysql.connector
-
-global bookstore_db
-
-bookstore_db = mysql.connector.connect(user='root',
-                                            password='64d^)4H6zsQ}',
-                                            host='127.0.0.1',
-                                            database='henry_books')
-
-class Folders(object):
-    def __init__(self):
-        self.root = tk.Tk()
-        self.initial_folders()
-        self.root.mainloop()
-
-    def initial_folders(self):
-        self.root.title("Henry's Bookstore")
-        # self.root.geometry('400x400')
-        self.tabcontrol = ttk.Notebook(self.root)
-        self.tabcontrol.pack(pady=10, expand=True)
-
-        # create frames
-        self.frame1 = ttk.Frame(self.tabcontrol, width=400, height=280)
-        self.frame2 = ttk.Frame(self.tabcontrol, width=400, height=280)
-        self.frame3 = ttk.Frame(self.tabcontrol, width=400, height=280)
-
-        self.frame1.pack(fill='both', expand=True)
-        self.frame2.pack(fill='both', expand=True)
-        self.frame3.pack(fill='both', expand=True)
-
-        # add frames to notebook
-        self.tabcontrol.add(self.frame1, text='Search by Author')
-        self.tabcontrol.add(self.frame2, text='Search by Publisher')
-        self.tabcontrol.add(self.frame3, text='Search by Category')
-
-        # ComboBox and Tree views
-        self.combobox1()
-
-        # self.treeview1()
-
-
-    def combobox1(self):
-        # Labels
-        self.label1 = ttk.Label(self.frame1)
-        self.label1.grid(column=1, row=1)
-        self.label1['text'] = "Author Last Name: "
-
-        #Grabing List of authors
-        self.authors_list = HenrySBA()
-
-        # Setting up drop down
-        self.com1 = ttk.Combobox(self.frame1, width=20, state='readonly')
-        self.com1.grid(column=2,row=1)
-        self.com1['values'] = self.authors_list.getauthors()
-        self.com1.current(0)
-        self.com1.bind("<<ComboboxSelected>>", self.comCallBack)
-
-
-    def combobox2(self,author):
-        # Labels
-        self.label2 = ttk.Label(self.frame1)
-        self.label2.grid(column=1, row=2)
-        self.label2['text'] = "Book Name: "
-
-        self.com2 = ttk.Combobox(self.frame1, width=20, state='readonly')
-        self.com2.grid(column=2, row=2)
-        # TODO fix the submit button call function
-        # print(self.comCallBack)
-        # self.my_button1 = tk.Button(self.frame1, text="Submit", command="Something")
-        # self.my_button1.grid(column=1, row=4)
-
-        self.book_list = HenrySBA()
-        self.com2['values'] = self.book_list.getbooks(author)
-        self.com2.current(0)
-        # self.com2.bind("<<ComboboxSelected>>", self.comCallBack2)
-
-
-    def treeview1(self):
-        self.tree1 = ttk.Treeview(self.frame1, columns=('TITLE','NUMBOOKS'), show="headings")
-        # TODO throw a for loop in here to get all the column names
-        self.tree1.heading('TITLE', text='TITLE')
-        self.tree1.heading('NUMBOOKS', text="NUMBOOKS")
-        self.tree1.grid(column=3, row=5, pady=5, padx=5)
-
-        for i in self.tree1.get_children():
-            self.tree1.delete(i)
-
-        for row in self.authors_list.getbooks():
-            self.tree1.insert("","end", values=[row[1]])
-
-
-    def comCallBack(self,event):
-        """This holds the index of the search menu. Will want to make it fire upon submitting"""
-        self.author_list = self.authors_list.getauthors()
-        self.selIndex = int(event.widget.current())
-        self.author = self.authors_list.getauthor(self.selIndex)
-        print(self.author)
-        self.combobox2(self.author)
-        return self.author
-
-    def comCallBack2(self,event):
-        self.book_list = self.book_list.getbooks(self.author)
-        self.selIndex2 = event.widget.current()
-        # print("Call Back 2", self.selIndex2)
-
-
-class HenrySBA():
-    """Search By Author"""
-    def __init__(self):
-        self.mydb = bookstore_db
-        self.mycur = self.mydb.cursor()
-        self.getauthors()
-
-# TODO figure out this string function
-    def __str__(self):
-        """Will need a string"""
-        return str(self.authorlist)
-
-    def getauthors(self):
-        self.sql = "SELECT AUTHOR_NUM, AUTHOR_LAST, AUTHOR_FIRST FROM henry_author"
-        self.mycur.execute(self.sql)
-        self.authorlist = []
-        for row in self.mycur:
-            self.authorlist.append(row[1])
-        self.authorlist = sorted(self.authorlist)  # Sorting the list alphabetically
-        return self.authorlist
-
-    def getauthor(self, index):
-        return self.authorlist[index]
-
-    def getbooks(self, author):
-        self.author = author
-        print(self.author)
-        # self.sql2 = 'SELECT * FROM henry_book'
-        self.sql2 = 'SELECT henry_book.TITLE, count(henry_inventory.BOOK_CODE) as NUMBOOKS ' \
-                    'FROM henry_books.henry_author ' \
-                    'INNER JOIN henry_books.henry_wrote ' \
-                    'ON henry_wrote.AUTHOR_NUM = henry_author.AUTHOR_NUM ' \
-                    'INNER JOIN henry_book ' \
-                    'ON henry_book.BOOK_CODE = henry_wrote.BOOK_CODE ' \
-                    'INNER JOIN henry_inventory ' \
-                    'ON henry_inventory.BOOK_CODE = henry_book.BOOK_CODE ' \
-                    'WHERE AUTHOR_LAST = ' \
-                    '"' + self.author + '"' \
-                    + 'GROUP BY henry_inventory.BOOK_CODE'
-
-        self.mycur.execute(self.sql2)
-        self.booklist = []
-
-        for row in self.mycur:
-            self.booklist.append(row[0])
-
-        print(self.booklist)
-        return self.booklist
-
-
-
-
-
-class HenrySBC():
-    """Search By Category. In Book Type"""
-    def __init__(self):
-        self.mydb = bookstore_db
-        self.mycur = self.mydb.cursor()
-        self.getcategory()
-
-    def getcategory(self):
-        sql = "SELECT * FROM henry_book"
-        self.mycur.execute(sql)
-        Bookcat = []
-        for row in self.mycur:
-            Bookcat.append(row[1])
-        # print(Bookcat)
-        return Bookcat
-
-
-class HenrySBP():
-    """Search By Publisher"""
-    def __init__(self):
-        self.mydb = bookstore_db
-        self.mycur = self.mydb.cursor()
-        self.getpublisher()
-
-    def getpublisher(self):
-        sql = "SELECT * FROM henry_publisher"
-        self.mycur.execute(sql)
-        Booklist = []
-        for row in self.mycur:
-            Booklist.append([row[0], row[1], row[2]])
-        print(Booklist)
-        return Booklist
-
-if __name__ == '__main__':
-    main_window = Folders()
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1c947e22-56ad-44fa-af85-63525d7490ba\" name=\"Default Changelist\" comment=\"Airplane Commit\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/henry1.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/henry1.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ChangesViewManager\">\r\n    <option name=\"groupingKeys\">\r\n      <option value=\"repository\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"ROOT_SYNC\" value=\"SYNC\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"GithubProjectSettings\">\r\n    <option name=\"CREATE_PULL_REQUEST_DEFAULT_BRANCH\" value=\"main\" />\r\n    <option name=\"CREATE_PULL_REQUEST_DEFAULT_REPO_USER\" value=\"DuncanFerguson\" />\r\n    <option name=\"CREATE_PULL_REQUEST_DEFAULT_REPO_NAME\" value=\"SQL_PYTHON_PROJECTS\" />\r\n  </component>\r\n  <component name=\"JupyterTrust\" id=\"dcfd4016-0ef7-463e-a86f-a68eb7a1d4a4\" />\r\n  <component name=\"ProjectId\" id=\"1rVg8DnQ4qHDwP15HGzD0xkpwhb\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$USER_HOME$/Documents\" />\r\n    <property name=\"restartRequiresConfirmation\" value=\"false\" />\r\n    <property name=\"run.code.analysis.last.selected.profile\" value=\"pProject Default\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\dunca\\Documents\" />\r\n      <recent name=\"C:\\Users\\dunca\\Dropbox (Personal)\\Duncan\\PYTHON_REPOSITORY\\SQL_PYTHON_PROJECTS\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.henry1\">\r\n    <configuration name=\"henry\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\dunca\\anaconda3\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/henry.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"henry1\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\dunca\\anaconda3\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/henry1.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"henry_2\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\dunca\\anaconda3\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/henry_2.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"true\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"henry_3\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\dunca\\anaconda3\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/henry_3.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"true\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"testing_Pulls\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"SQL_PYTHON_PROJECTS\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/testing_Pulls.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.henry1\" />\r\n        <item itemvalue=\"Python.henry_3\" />\r\n        <item itemvalue=\"Python.henry_2\" />\r\n        <item itemvalue=\"Python.henry\" />\r\n        <item itemvalue=\"Python.testing_Pulls\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1c947e22-56ad-44fa-af85-63525d7490ba\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1619066509643</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1619066509643</updated>\r\n      <workItem from=\"1619066510692\" duration=\"4348000\" />\r\n      <workItem from=\"1619125462069\" duration=\"40576000\" />\r\n      <workItem from=\"1619197742819\" duration=\"140000\" />\r\n      <workItem from=\"1619197929726\" duration=\"3414000\" />\r\n      <workItem from=\"1619276014254\" duration=\"19890000\" />\r\n      <workItem from=\"1619383616293\" duration=\"2301000\" />\r\n      <workItem from=\"1619391727796\" duration=\"6973000\" />\r\n      <workItem from=\"1619406658867\" duration=\"2335000\" />\r\n      <workItem from=\"1619466308371\" duration=\"4987000\" />\r\n      <workItem from=\"1619494017731\" duration=\"1601000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Uploading_Henry\">\r\n      <created>1619066553860</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619066553860</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"GUI search option looking good\">\r\n      <created>1619067394572</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619067394572</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"GUI search option looking good. Now need to plug into SQL\">\r\n      <created>1619068422995</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619068422995</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Working on GUI to SQL connection\">\r\n      <created>1619069632389</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619069632389</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Need to switch to tabs\">\r\n      <created>1619070092998</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619070092998</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Creating Henry2 to deal with tabs\">\r\n      <created>1619070628872</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619070628872</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Updating with yash\">\r\n      <created>1619126343186</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619126343186</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Updating with yash\">\r\n      <created>1619126845114</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619126845114</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"459\">\r\n      <created>1619132541073</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619132541073</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"503\">\r\n      <created>1619132632305</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619132632305</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"The begining of the search is printing out into the command line. Get this to then display back up on to the window\">\r\n      <created>1619136376685</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619136376685</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Submit buttons working, now need to get them u pon the tabs\">\r\n      <created>1619139127510</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619139127510</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Drop Down Working\">\r\n      <created>1619140967157</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619140967157</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Box looking good, need to connect to sql\">\r\n      <created>1619142609873</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619142609873</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Need to populate Trees with SQL\">\r\n      <created>1619143518676</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619143518676</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Before the Turn for SQL Joins\">\r\n      <created>1619143869816</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619143869816</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Get drop downs working. Fix Treeview to be where the books are\">\r\n      <created>1619153565615</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619153565615</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Get drop downs working. Make List Dynamic\">\r\n      <created>1619154039325</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619154039325</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Midnight Turn, filter the books by the Author name\">\r\n      <created>1619157748249</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619157748249</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Getting closer to the book filter\">\r\n      <created>1619158853705</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619158853705</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Author Filter too book name work\">\r\n      <created>1619159276896</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619159276896</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Juypiter Push\">\r\n      <created>1619276286616</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619276286616</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Search with box working, get treeview to populate\">\r\n      <created>1619283168870</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619283168870</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Drop down boxes work, need to populate list\">\r\n      <created>1619284198482</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619284198482</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Working front end\">\r\n      <created>1619291185761</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619291185761</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Working folder 1\">\r\n      <created>1619291622234</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619291622234</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"Looking good on the first tab. Need to change up the DOA and work on the rest of the tabs\">\r\n      <created>1619294554942</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619294554942</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Looking good, need to clean up the tabs. Split into two different sheets\">\r\n      <created>1619295194501</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619295194501</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Looking good, need to clean up the tabs. Split into two different sheets\">\r\n      <created>1619297544860</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619297544860</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"CRC committ\">\r\n      <created>1619297756243</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619297756243</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Airplane Commit\">\r\n      <created>1619466351718</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619466351718</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"32\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Paths\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"dir:C:/Users/dunca/Dropbox (Personal)/Duncan/PYTHON_REPOSITORY/SQL_PYTHON_PROJECTS\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Need to populate Trees with SQL\" />\r\n    <MESSAGE value=\"Before the Turn for SQL Joins\" />\r\n    <MESSAGE value=\"Get drop downs working. Fix Treeview to be where the books are\" />\r\n    <MESSAGE value=\"Get drop downs working. Make List Dynamic\" />\r\n    <MESSAGE value=\"Midnight Turn, filter the books by the Author name\" />\r\n    <MESSAGE value=\"Getting closer to the book filter\" />\r\n    <MESSAGE value=\"Author Filter too book name work\" />\r\n    <MESSAGE value=\"Working List Change\" />\r\n    <MESSAGE value=\"108 Push\" />\r\n    <MESSAGE value=\"108 Push workinglists\" />\r\n    <MESSAGE value=\"117 Working Push\" />\r\n    <MESSAGE value=\"Link the Tree Better\" />\r\n    <MESSAGE value=\"Link the Tree Better 218\" />\r\n    <MESSAGE value=\"Back to the top again. urgg\" />\r\n    <MESSAGE value=\"Working through the list into the tree.&#10;Will want to make a new tree update\" />\r\n    <MESSAGE value=\"Pre_Flight_Push\" />\r\n    <MESSAGE value=\"Juypiter Push\" />\r\n    <MESSAGE value=\"Search with box working, get treeview to populate\" />\r\n    <MESSAGE value=\"Drop down boxes work, need to populate list\" />\r\n    <MESSAGE value=\"Working front end\" />\r\n    <MESSAGE value=\"Working folder 1\" />\r\n    <MESSAGE value=\"Looking good on the first tab. Need to change up the DOA and work on the rest of the tabs\" />\r\n    <MESSAGE value=\"Looking good, need to clean up the tabs. Split into two different sheets\" />\r\n    <MESSAGE value=\"CRC committ\" />\r\n    <MESSAGE value=\"Airplane Commit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Airplane Commit\" />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"698\" y=\"404\" key=\"#Notifications\" timestamp=\"1619162080718\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1160\" />\r\n    </state>\r\n    <state x=\"698\" y=\"404\" key=\"#Notifications/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619162080718\" />\r\n    <state x=\"552\" y=\"213\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog\" timestamp=\"1619200473801\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"552\" y=\"238\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@0.0.1920.1160\" timestamp=\"1619068502565\" />\r\n    <state x=\"552\" y=\"213\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619200473801\" />\r\n    <state x=\"707\" y=\"435\" key=\"ANALYSIS_DLG_com.intellij.analysis.BaseAnalysisAction$1\" timestamp=\"1619138084925\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1160\" />\r\n    </state>\r\n    <state x=\"707\" y=\"435\" key=\"ANALYSIS_DLG_com.intellij.analysis.BaseAnalysisAction$1/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619138084925\" />\r\n    <state x=\"-1828\" y=\"92\" width=\"1736\" height=\"976\" key=\"DiffContextDialog\" timestamp=\"1619128889074\">\r\n      <screen x=\"-1920\" y=\"0\" width=\"1920\" height=\"1160\" />\r\n    </state>\r\n    <state x=\"-1828\" y=\"92\" width=\"1736\" height=\"976\" key=\"DiffContextDialog/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619128889074\" />\r\n    <state x=\"740\" y=\"288\" key=\"FileChooserDialogImpl\" timestamp=\"1619385976618\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"-1180\" y=\"321\" key=\"FileChooserDialogImpl/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619126800654\" />\r\n    <state x=\"740\" y=\"321\" key=\"FileChooserDialogImpl/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619131349344\" />\r\n    <state x=\"740\" y=\"288\" key=\"FileChooserDialogImpl/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619385976618\" />\r\n    <state x=\"-1229\" y=\"447\" key=\"Github.CreatePullRequestDialog\" timestamp=\"1619128414859\">\r\n      <screen x=\"-1920\" y=\"0\" width=\"1920\" height=\"1160\" />\r\n    </state>\r\n    <state x=\"-1229\" y=\"447\" key=\"Github.CreatePullRequestDialog/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619128414859\" />\r\n    <state x=\"800\" y=\"478\" key=\"Github.ShareDialog\" timestamp=\"1619126890259\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1160\" />\r\n    </state>\r\n    <state x=\"800\" y=\"478\" key=\"Github.ShareDialog/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619126890259\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1619483058223\">\r\n      <screen x=\"-3840\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"321\" key=\"GridCell.Tab.0.bottom/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619070476546\" />\r\n    <state width=\"1877\" height=\"321\" key=\"GridCell.Tab.0.bottom/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@0.0.1920.1160\" timestamp=\"1619069867863\" />\r\n    <state width=\"1564\" height=\"321\" key=\"GridCell.Tab.0.bottom/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619136996050\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.bottom/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-3840.0.1920.1040\" timestamp=\"1619483058223\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.bottom/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619474377958\" />\r\n    <state width=\"1877\" height=\"238\" key=\"GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619399714052\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.center\" timestamp=\"1619483058223\">\r\n      <screen x=\"-3840\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"321\" key=\"GridCell.Tab.0.center/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619070476545\" />\r\n    <state width=\"1877\" height=\"321\" key=\"GridCell.Tab.0.center/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@0.0.1920.1160\" timestamp=\"1619069867863\" />\r\n    <state width=\"1564\" height=\"321\" key=\"GridCell.Tab.0.center/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619136996050\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.center/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-3840.0.1920.1040\" timestamp=\"1619483058223\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.center/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619474377958\" />\r\n    <state width=\"1877\" height=\"238\" key=\"GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619399714052\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.left\" timestamp=\"1619483058223\">\r\n      <screen x=\"-3840\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"321\" key=\"GridCell.Tab.0.left/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619070476545\" />\r\n    <state width=\"1877\" height=\"321\" key=\"GridCell.Tab.0.left/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@0.0.1920.1160\" timestamp=\"1619069867863\" />\r\n    <state width=\"1564\" height=\"321\" key=\"GridCell.Tab.0.left/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619136996050\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.left/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-3840.0.1920.1040\" timestamp=\"1619483058223\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.left/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619474377958\" />\r\n    <state width=\"1877\" height=\"238\" key=\"GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619399714052\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.right\" timestamp=\"1619483058223\">\r\n      <screen x=\"-3840\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"321\" key=\"GridCell.Tab.0.right/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619070476545\" />\r\n    <state width=\"1877\" height=\"321\" key=\"GridCell.Tab.0.right/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@0.0.1920.1160\" timestamp=\"1619069867863\" />\r\n    <state width=\"1564\" height=\"321\" key=\"GridCell.Tab.0.right/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619136996050\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.right/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-3840.0.1920.1040\" timestamp=\"1619483058223\" />\r\n    <state width=\"1877\" height=\"2\" key=\"GridCell.Tab.0.right/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619474377958\" />\r\n    <state width=\"1877\" height=\"238\" key=\"GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619399714052\" />\r\n    <state x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" key=\"SettingsEditor\" timestamp=\"1619384626738\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"461\" y=\"225\" key=\"SettingsEditor/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@0.0.1920.1160\" timestamp=\"1619066790819\" />\r\n    <state x=\"-1459\" y=\"225\" key=\"SettingsEditor/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619130547074\" />\r\n    <state x=\"562\" y=\"265\" key=\"SettingsEditor/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619131372972\" />\r\n    <state x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" key=\"SettingsEditor/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619384626737\" />\r\n    <state x=\"552\" y=\"313\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1619466378649\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1160\" />\r\n    </state>\r\n    <state x=\"-1368\" y=\"313\" key=\"Vcs.Push.Dialog.v2/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619070095636\" />\r\n    <state x=\"552\" y=\"313\" key=\"Vcs.Push.Dialog.v2/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@0.0.1920.1160\" timestamp=\"1619070631381\" />\r\n    <state x=\"-1368\" y=\"313\" key=\"Vcs.Push.Dialog.v2/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619136381004\" />\r\n    <state x=\"-3288\" y=\"281\" key=\"Vcs.Push.Dialog.v2/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-3840.0.1920.1040\" timestamp=\"1619132639116\" />\r\n    <state x=\"552\" y=\"313\" key=\"Vcs.Push.Dialog.v2/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619466378649\" />\r\n    <state x=\"552\" y=\"281\" key=\"Vcs.Push.Dialog.v2/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619297760198\" />\r\n    <state x=\"777\" y=\"443\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1619297838975\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"-1143\" y=\"494\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619129840175\" />\r\n    <state x=\"777\" y=\"494\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619163186789\" />\r\n    <state x=\"777\" y=\"443\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619297838975\" />\r\n    <state x=\"-7\" y=\"221\" width=\"974\" height=\"819\" key=\"dock-window-1\" timestamp=\"1619279669845\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"-1668\" y=\"-24\" width=\"1424\" height=\"798\" maximized=\"true\" key=\"dock-window-1/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@0.0.1920.1160\" timestamp=\"1619070560920\" />\r\n    <state x=\"-1927\" y=\"0\" width=\"974\" height=\"1167\" key=\"dock-window-1/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619135817865\" />\r\n    <state x=\"277\" y=\"287\" width=\"1397\" height=\"798\" key=\"dock-window-1/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619138696355\" />\r\n    <state x=\"-7\" y=\"221\" width=\"974\" height=\"819\" key=\"dock-window-1/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619279669845\" />\r\n    <state x=\"610\" y=\"368\" width=\"932\" height=\"579\" key=\"dock-window-2\" timestamp=\"1619285458678\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"-1770\" y=\"-21\" width=\"1665\" height=\"798\" maximized=\"true\" key=\"dock-window-2/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619143503169\" />\r\n    <state x=\"610\" y=\"368\" width=\"932\" height=\"579\" key=\"dock-window-2/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619285458678\" />\r\n    <state x=\"826\" y=\"332\" width=\"932\" height=\"743\" key=\"dock-window-3\" timestamp=\"1619287694039\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"-1763\" y=\"-16\" width=\"1665\" height=\"873\" maximized=\"true\" key=\"dock-window-3/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619166629120\" />\r\n    <state x=\"826\" y=\"332\" width=\"932\" height=\"743\" key=\"dock-window-3/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619287694039\" />\r\n    <state x=\"1054\" y=\"290\" width=\"932\" height=\"743\" key=\"dock-window-4\" timestamp=\"1619290586279\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"1054\" y=\"290\" width=\"932\" height=\"743\" key=\"dock-window-4/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1619290586279\" />\r\n    <state x=\"841\" y=\"425\" key=\"git4idea.history.wholeTree.VcsStructureChooser\" timestamp=\"1619131370214\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1160\" />\r\n    </state>\r\n    <state x=\"841\" y=\"425\" key=\"git4idea.history.wholeTree.VcsStructureChooser/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619131370214\" />\r\n    <state x=\"512\" y=\"441\" key=\"git4idea.remote.GitConfigureRemotesDialog\" timestamp=\"1619162027001\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1160\" />\r\n    </state>\r\n    <state x=\"-1408\" y=\"441\" key=\"git4idea.remote.GitConfigureRemotesDialog/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160\" timestamp=\"1619130075837\" />\r\n    <state x=\"512\" y=\"441\" key=\"git4idea.remote.GitConfigureRemotesDialog/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160\" timestamp=\"1619162027001\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/SQL_PYTHON_PROJECTS$testing_sql.coverage\" NAME=\"testing_sql Coverage Results\" MODIFIED=\"1619069581103\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../../Education/DU_Data_Science/Classes/Data_Base_Management_SQL/HW_1\" />\r\n    <SUITE FILE_PATH=\"coverage/henry_2_py$henry.coverage\" NAME=\"henry Coverage Results\" MODIFIED=\"1619280829174\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/henry_2_py$henry1.coverage\" NAME=\"henry1 Coverage Results\" MODIFIED=\"1619474377946\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/SQL_PYTHON_PROJECTS$testing_Pulls.coverage\" NAME=\"testing_Pulls Coverage Results\" MODIFIED=\"1619166890159\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/henry_2_py$henry_2.coverage\" NAME=\"henry_2 Coverage Results\" MODIFIED=\"1619287270052\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/SQL_PYTHON_PROJECTS$checked_button.coverage\" NAME=\"checked_button Coverage Results\" MODIFIED=\"1619067014614\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/SQL_PYTHON_PROJECTS$HW1_DLF.coverage\" NAME=\"HW1_DLF Coverage Results\" MODIFIED=\"1619069565538\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../../Education/DU_Data_Science/Classes/Data_Base_Management_SQL/HW_1\" />\r\n    <SUITE FILE_PATH=\"coverage/SQL_PYTHON_PROJECTS$henry_2.coverage\" NAME=\"henry_2 Coverage Results\" MODIFIED=\"1619169054486\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/SQL_PYTHON_PROJECTS$henry.coverage\" NAME=\"henry Coverage Results\" MODIFIED=\"1619132371383\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/SQL_PYTHON_PROJECTS$gui_Example.coverage\" NAME=\"gui_Example Coverage Results\" MODIFIED=\"1619143429792\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/SQL_PYTHON_PROJECTS$pactice_files.coverage\" NAME=\"pactice_files Coverage Results\" MODIFIED=\"1619125538070\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/henry_2_py$henry_3.coverage\" NAME=\"henry_3 Coverage Results\" MODIFIED=\"1619383849020\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
+++ .idea/workspace.xml	(date 1619498421929)
@@ -19,10 +19,8 @@
     <select />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="1c947e22-56ad-44fa-af85-63525d7490ba" name="Default Changelist" comment="Airplane Commit">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/henry1.py" beforeDir="false" afterPath="$PROJECT_DIR$/henry1.py" afterDir="false" />
-    </list>
+    <list default="true" id="1c947e22-56ad-44fa-af85-63525d7490ba" name="Default Changelist" comment="Branching it out" />
+    <list id="736ffa8f-3231-4dba-ab57-34f5f7b288d6" name="Branch" comment="" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -52,6 +50,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="main" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
     <option name="ROOT_SYNC" value="SYNC" />
     <option name="UPDATE_TYPE" value="REBASE" />
@@ -96,7 +99,7 @@
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <module name="" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/henry.py" />
+      <option name="SCRIPT_NAME" value="C:\Users\dunca\AppData\Roaming\JetBrains\PyCharm2020.2\scratches\henry.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -118,7 +121,7 @@
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <module name="" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/henry1.py" />
+      <option name="SCRIPT_NAME" value="C:\Users\dunca\AppData\Roaming\JetBrains\PyCharm2020.2\scratches\henry1.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -140,7 +143,7 @@
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <module name="" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/henry_2.py" />
+      <option name="SCRIPT_NAME" value="C:\Users\dunca\AppData\Roaming\JetBrains\PyCharm2020.2\scratches\henry_2.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="true" />
@@ -162,7 +165,7 @@
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <module name="" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/henry_3.py" />
+      <option name="SCRIPT_NAME" value="C:\Users\dunca\AppData\Roaming\JetBrains\PyCharm2020.2\scratches\henry_3.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="true" />
@@ -184,7 +187,7 @@
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/testing_Pulls.py" />
+      <option name="SCRIPT_NAME" value="C:\Users\dunca\AppData\Roaming\JetBrains\PyCharm2020.2\scratches\testing_Pulls.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -439,7 +442,14 @@
       <option name="project" value="LOCAL" />
       <updated>1619466351718</updated>
     </task>
-    <option name="localTasksCounter" value="32" />
+    <task id="LOCAL-00032" summary="Branching it out">
+      <created>1619498199869</created>
+      <option name="number" value="00032" />
+      <option name="presentableId" value="LOCAL-00032" />
+      <option name="project" value="LOCAL" />
+      <updated>1619498199869</updated>
+    </task>
+    <option name="localTasksCounter" value="33" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -473,7 +483,6 @@
     <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="Need to populate Trees with SQL" />
     <MESSAGE value="Before the Turn for SQL Joins" />
     <MESSAGE value="Get drop downs working. Fix Treeview to be where the books are" />
     <MESSAGE value="Get drop downs working. Make List Dynamic" />
@@ -498,7 +507,8 @@
     <MESSAGE value="Looking good, need to clean up the tabs. Split into two different sheets" />
     <MESSAGE value="CRC committ" />
     <MESSAGE value="Airplane Commit" />
-    <option name="LAST_COMMIT_MESSAGE" value="Airplane Commit" />
+    <MESSAGE value="Branching it out" />
+    <option name="LAST_COMMIT_MESSAGE" value="Branching it out" />
   </component>
   <component name="WindowStateProjectService">
     <state x="698" y="404" key="#Notifications" timestamp="1619162080718">
@@ -575,14 +585,18 @@
     <state x="-1459" y="225" key="SettingsEditor/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160" timestamp="1619130547074" />
     <state x="562" y="265" key="SettingsEditor/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160" timestamp="1619131372972" />
     <state x="0" y="0" width="1920" height="1040" key="SettingsEditor/0.0.1920.1040@0.0.1920.1040" timestamp="1619384626737" />
-    <state x="552" y="313" key="Vcs.Push.Dialog.v2" timestamp="1619466378649">
+    <state x="790" y="449" key="VCS.EditChangelistDialog" timestamp="1619498160211">
+      <screen x="0" y="0" width="1920" height="1160" />
+    </state>
+    <state x="790" y="449" key="VCS.EditChangelistDialog/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160" timestamp="1619498160211" />
+    <state x="552" y="313" key="Vcs.Push.Dialog.v2" timestamp="1619498205994">
       <screen x="0" y="0" width="1920" height="1160" />
     </state>
     <state x="-1368" y="313" key="Vcs.Push.Dialog.v2/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@-1920.0.1920.1160" timestamp="1619070095636" />
     <state x="552" y="313" key="Vcs.Push.Dialog.v2/-3840.0.1920.1040/-1920.0.1920.1160/0.0.1920.1160@0.0.1920.1160" timestamp="1619070631381" />
     <state x="-1368" y="313" key="Vcs.Push.Dialog.v2/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-1920.0.1920.1160" timestamp="1619136381004" />
     <state x="-3288" y="281" key="Vcs.Push.Dialog.v2/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@-3840.0.1920.1040" timestamp="1619132639116" />
-    <state x="552" y="313" key="Vcs.Push.Dialog.v2/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160" timestamp="1619466378649" />
+    <state x="552" y="313" key="Vcs.Push.Dialog.v2/-3840.0.1920.1040/0.0.1920.1160/-1920.0.1920.1160@0.0.1920.1160" timestamp="1619498205994" />
     <state x="552" y="281" key="Vcs.Push.Dialog.v2/0.0.1920.1040@0.0.1920.1040" timestamp="1619297760198" />
     <state x="777" y="443" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1619297838975">
       <screen x="0" y="0" width="1920" height="1040" />
@@ -624,7 +638,7 @@
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/SQL_PYTHON_PROJECTS$testing_sql.coverage" NAME="testing_sql Coverage Results" MODIFIED="1619069581103" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../../Education/DU_Data_Science/Classes/Data_Base_Management_SQL/HW_1" />
     <SUITE FILE_PATH="coverage/henry_2_py$henry.coverage" NAME="henry Coverage Results" MODIFIED="1619280829174" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-    <SUITE FILE_PATH="coverage/henry_2_py$henry1.coverage" NAME="henry1 Coverage Results" MODIFIED="1619474377946" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/henry_2_py$henry1.coverage" NAME="henry1 Coverage Results" MODIFIED="1619498056449" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/SQL_PYTHON_PROJECTS$testing_Pulls.coverage" NAME="testing_Pulls Coverage Results" MODIFIED="1619166890159" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/henry_2_py$henry_2.coverage" NAME="henry_2 Coverage Results" MODIFIED="1619287270052" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/SQL_PYTHON_PROJECTS$checked_button.coverage" NAME="checked_button Coverage Results" MODIFIED="1619067014614" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
Index: henry.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Student: Duncan Ferguson\r\n#Student Id: 871641260\r\n#Class:\r\n#Assignment: Home_Work_1\r\n\r\nfrom tkinter import *\r\nimport tkinter as tk\r\nimport mysql.connector\r\n\r\n\r\nclass bookstore(tk.Frame):\r\n    def __init__(self, parent):\r\n        tk.Frame.__init__(self, parent)\r\n        self.parent = parent\r\n        self.initial_user_interface()\r\n\r\n    def initial_user_interface(self):\r\n        self.parent.title(\"Henry's Bookstore\")\r\n        self.parent.geometry(\"700x700\")\r\n        # TODO make label look better\r\n        self.label = tk.Label(self.parent, text=\"Type of Search\").pack()\r\n        self.cb = StringVar()\r\n        self.b1 = tk.Checkbutton(self.parent, text=\"Author\", variable=self.cb, onvalue='author', offvalue=\"\").pack()\r\n        self.b2 = tk.Checkbutton(self.parent, text=\"Category\", variable=self.cb, onvalue='category', offvalue=\"\").pack()\r\n        self.b3 = tk.Checkbutton(self.parent, text=\"Publisher\", variable=self.cb, onvalue='publisher', offvalue=\"\").pack()\r\n        self.submit_button = tk.Button(self.parent, text=\"Submit\", state=NORMAL, command=self.submitted, padx=20, pady=5).pack()\r\n\r\n    def submitted(self):\r\n        # TODO have the button return the right value\r\n        self.cat_choice = self.cb.get()\r\n        self.parent.destroy()\r\n\r\n\r\nclass DBTest():\r\n    def __init__(self):\r\n        self.mydb = mysql.connector.connect(user='root',\r\n                                            password='64d^)4H6zsQ}',\r\n                                            host='127.0.0.1',\r\n                                            database='henry_books')\r\n        self.mycur = self.mydb.cursor()\r\n\r\n    def close(self):\r\n        self.mydb.commit()\r\n        self.mydb.close()\r\n\r\n    def getbooks(self,selection):\r\n        # TODO only works for author and publisher\r\n        sql = \"SELECT * FROM henry_\"+selection\r\n        self.mycur.execute(sql)\r\n\r\n        Authorlist = []\r\n        for row in self.mycur:\r\n            Authorlist.append([row[0], row[1], row[2]])\r\n        print(Authorlist)\r\n\r\nclass HenrySBA():\r\n    \"\"\"Search By Author\"\"\"\r\n    def __init__(self):\r\n        return\r\n    # TODO will need a COMBObox to select author.\r\n    # Fill this with a list of authors\r\n    def __str__(self):\r\n        \"\"\"Will need a string\"\"\"\r\n\r\n\r\nclass HenrySBC():\r\n    \"\"\"Search By Category. In Book Type\"\"\"\r\n    def __init__(self):\r\n        return\r\n\r\nclass HenrySBP():\r\n    \"\"\"Search By Publisher\"\"\"\r\n    def __init__(self):\r\n        return\r\n\r\n\r\ndef runsql(run):\r\n    \"\"\"This function runs the query\"\"\"\r\n    test = DBTest()\r\n    test.getbooks(run.cat_choice)\r\n    test.close()\r\n\r\n\r\nif __name__ == '__main__':\r\n   root = tk.Tk()\r\n   run = bookstore(root)\r\n   root.mainloop()\r\n   runsql(run)\r\n\r\n   # test = DBTest()\r\n   # test.getbooks()\r\n   # test.close()\r\n\r\n# Testin Git\r\n#Testing Again
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- henry.py	(revision 5ca17c3abf9c82bb1d2e1148ba137b41efc99f42)
+++ henry.py	(date 1619498421919)
@@ -1,95 +1,171 @@
-#Student: Duncan Ferguson
-#Student Id: 871641260
-#Class:
-#Assignment: Home_Work_1
-
-from tkinter import *
+from HenryDOA import HenryDOA
 import tkinter as tk
-import mysql.connector
-
-
-class bookstore(tk.Frame):
-    def __init__(self, parent):
-        tk.Frame.__init__(self, parent)
-        self.parent = parent
-        self.initial_user_interface()
-
-    def initial_user_interface(self):
-        self.parent.title("Henry's Bookstore")
-        self.parent.geometry("700x700")
-        # TODO make label look better
-        self.label = tk.Label(self.parent, text="Type of Search").pack()
-        self.cb = StringVar()
-        self.b1 = tk.Checkbutton(self.parent, text="Author", variable=self.cb, onvalue='author', offvalue="").pack()
-        self.b2 = tk.Checkbutton(self.parent, text="Category", variable=self.cb, onvalue='category', offvalue="").pack()
-        self.b3 = tk.Checkbutton(self.parent, text="Publisher", variable=self.cb, onvalue='publisher', offvalue="").pack()
-        self.submit_button = tk.Button(self.parent, text="Submit", state=NORMAL, command=self.submitted, padx=20, pady=5).pack()
-
-    def submitted(self):
-        # TODO have the button return the right value
-        self.cat_choice = self.cb.get()
-        self.parent.destroy()
+from tkinter import ttk
 
-
-class DBTest():
-    def __init__(self):
-        self.mydb = mysql.connector.connect(user='root',
-                                            password='64d^)4H6zsQ}',
-                                            host='127.0.0.1',
-                                            database='henry_books')
-        self.mycur = self.mydb.cursor()
-
-    def close(self):
-        self.mydb.commit()
-        self.mydb.close()
-
-    def getbooks(self,selection):
-        # TODO only works for author and publisher
-        sql = "SELECT * FROM henry_"+selection
-        self.mycur.execute(sql)
-
-        Authorlist = []
-        for row in self.mycur:
-            Authorlist.append([row[0], row[1], row[2]])
-        print(Authorlist)
-
-class HenrySBA():
-    """Search By Author"""
-    def __init__(self):
-        return
-    # TODO will need a COMBObox to select author.
-    # Fill this with a list of authors
-    def __str__(self):
-        """Will need a string"""
-
-
-class HenrySBC():
-    """Search By Category. In Book Type"""
+class GUI(object):
+    """This class launches the main GUI. There are three folders/tabs. Those point to the different
+    searches."""
     def __init__(self):
+        self.root = tk.Tk()
+        self.root.title("Henry's Bookstore")
+        self.tabcontrol = ttk.Notebook(self.root)
+        self.tabcontrol.pack(pady=10, expand=True)
+
+        # Setting up Folders
+        self.folder_1 = HenrySBA(self.tabcontrol)
+        self.folder_2 = HenrySBP(self.tabcontrol)
+        # self.folder_3()
+        self.root.mainloop()
+
+
+class HenrySBA(object):
+    def __init__(self, tab):
+        self.tabcontrol = tab
+        # self.folder_1()
+        """Search by Author Folder"""
+        self.frame1 = ttk.Frame(self.tabcontrol, width=400, height=280)
+        self.frame1.pack(fill='both', expand=True)
+        self.tabcontrol.add(self.frame1, text='Search by Author')
+
+        # Author Lastname search
+        self.label1 = ttk.Label(self.frame1)
+        self.label1.grid(column=0, row=1, pady=2, padx=0)
+        self.label1['text'] = 'Author Last Name:'
+
+        # Author combo box
+        self.combo1 = ttk.Combobox(self.frame1, width=20, state='readonly')
+        self.combo1.grid(column=1, row=1, pady=2, padx=0)
+        self.combo1['values'] = HenryDOA().getauthors()
+        # self.combo1.current(0)
+
+        # TODO code right below gets past the first loop
+        # self.author_select = print(HenrySBA().getauthors()[0])
+        self.author_select = self.combo1.bind("<<ComboboxSelected>>", self.CallBack)
+
+        # Book search
+        self.label2 = ttk.Label(self.frame1, width=20, state='readonly')
+        self.label2.grid(column=0, row=2, pady=2, padx=0)
+        self.label2['text'] = 'Book Name:'
+
+        # Book combobox
+        self.combo2 = ttk.Combobox(self.frame1, width=20, state='readonly')
+        self.combo2.grid(column=1, row=2)
+
+        # Book price
+        self.label3 = ttk.Label(self.frame1, width=20, state='readonly')
+        self.label3.grid(column=0, row=3, pady=2, padx=0)
+        self.label3['text'] = 'Book Price:'
+
+        # Create the Tree Here
+        self.tree1 = ttk.Treeview(self.frame1, columns=('BRANCH_NAME','BOOKS_ON_HAND'), show='headings')
+        self.tree1.heading('BRANCH_NAME', text='Branch Name')
+        self.tree1.heading('BOOKS_ON_HAND', text='Book on Hand')
+        self.tree1.grid(columns=4, rows=3, pady=5, padx=5)
         return
 
-class HenrySBP():
-    """Search By Publisher"""
-    def __init__(self):
+    def CallBack(self,event):
+        """This is running of the Author Search """
+        self.selIndex = HenryDOA().getauthors()[int(event.widget.current())]
+        self.booklist = HenryDOA().getbooks(self.selIndex)
+        self.combo2['values'] = self.booklist
+        self.book_select = self.combo2.bind("<<ComboboxSelected>>", self.CallBack2)
+        self.author_select = HenryDOA().getauthors()[int(event.widget.current())]
+        # self.combo2.current(0)
+
+
+    def CallBack2(self,event):
+        """Making the tree for when book is selected"""
+        self.selIndex2 = event.widget.current()
+        self.book_select = self.booklist[self.selIndex2]
+        print(self.author_select)
+
+        for i in self.tree1.get_children():
+            self.tree1.delete(i)
+
+        for row in HenryDOA().getbranch(self.author_select, self.book_select):
+            self.tree1.insert("","end", values=[row[0], row[1]])
+            self.bookprice = row[2]
+
+        self.label4 = ttk.Label(self.frame1, width=20, state='readonly')
+        self.label4.grid(column=1, row=3, pady=2, padx=0)
+        self.label4['text'] = '$ '+ str(self.bookprice)
+
+        self.labelprice = ttk.Label()
+
+
+class HenrySBP(object):
+    def __init__(self, tab):
+        self.tabcontrol = tab
+        self.frame2 = ttk.Frame(self.tabcontrol, width=400, height=280)
+        self.frame2.pack(fill='both', expand=True)
+        self.tabcontrol.add(self.frame2, text='Search by Publisher')
+
+        # Author Lastname search
+        self.label1 = ttk.Label(self.frame2)
+        self.label1.grid(column=0, row=1)
+        self.label1['text'] = 'Publisher Name:'
+
+        # # Author combo box
+        self.combo1 = ttk.Combobox(self.frame2, width=20, state='readonly')
+        self.combo1.grid(column=1, row=1, pady=2, padx=0)
+        print(HenryDOA().getpublishers())
+        self.combo1['values'] = HenryDOA().getpublishers()
+        self.combo1.current(0)
+        #
+        self.author_select = self.combo1.bind("<<ComboboxSelected>>", self.CallBack)
+
+        # # Book search
+        self.label2 = ttk.Label(self.frame2, width=20, state='readonly')
+        self.label2.grid(column=0, row=2, pady=2, padx=0)
+        self.label2['text'] = 'Book Title:'
+
+        # # Book combobox
+        self.combo2 = ttk.Combobox(self.frame2, width=20, state='readonly')
+        self.combo2.grid(column=1, row=2)
+
+        # # Book price
+        self.label3 = ttk.Label(self.frame2, width=20, state='readonly')
+        self.label3.grid(column=0, row=3, pady=2, padx=0)
+        self.label3['text'] = 'Book Price:'
+
+        # # Create the Tree Here
+        self.tree1 = ttk.Treeview(self.frame2, columns=('BRANCH_NAME','BOOKS_ON_HAND'), show='headings')
+        self.tree1.heading('BRANCH_NAME', text='Branch Name')
+        self.tree1.heading('BOOKS_ON_HAND', text='Book on Hand')
+        self.tree1.grid(columns=4, rows=3, pady=5, padx=5)
         return
 
+    def CallBack(self,event):
+        """This is running of the Author Search """
+        self.selIndex = HenryDOA().getpublishers()[int(event.widget.current())]
+        self.booklist = HenryDOA().getpublisher_book_list(self.selIndex)
+        self.combo2['values'] = self.booklist
+        self.book_select = self.combo2.bind("<<ComboboxSelected>>", self.CallBack2)
+        self.publisher_select = HenryDOA().getpublishers()[int(event.widget.current())]
+        # self.combo2.current(0)
+
 
-def runsql(run):
-    """This function runs the query"""
-    test = DBTest()
-    test.getbooks(run.cat_choice)
-    test.close()
+    def CallBack2(self,event):
+        """Making the tree for when book is selected"""
+        self.selIndex2 = event.widget.current()
+        self.book_select = self.booklist[self.selIndex2]
+        print(self.book_select)
+
+        for i in self.tree1.get_children():
+            self.tree1.delete(i)
+
+        for row in HenryDOA().getbranch_by_pub(self.publisher_select, self.book_select):
+            self.tree1.insert("","end", values=[row[0], row[1]])
+            self.bookprice = row[2]
+
+        self.label4 = ttk.Label(self.frame2, width=20, state='readonly')
+        self.label4.grid(column=1, row=3, pady=2, padx=0)
+        self.label4['text'] = '$ '+ str(self.bookprice)
+
+        self.labelprice = ttk.Label()
 
 
 if __name__ == '__main__':
-   root = tk.Tk()
-   run = bookstore(root)
-   root.mainloop()
-   runsql(run)
+    mainfolder = GUI()
 
-   # test = DBTest()
-   # test.getbooks()
-   # test.close()
-
-# Testin Git
-#Testing Again
\ No newline at end of file
+# print(HenryDOA().getauthors())
\ No newline at end of file
